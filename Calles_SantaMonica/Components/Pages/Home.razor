@using Calles_SantaMonica.Components.Services;
@rendermode InteractiveServer
@page "/"

<div class="row">
    <div class="col-4">
        <div class="row mb-2">
            <div class="col-12">
                <select class="form-select" @bind="tipo_vehiculo">
                    <option value="Carro" selected>Carro</option>
                    <option value="Motocicleta">Motocicleta</option>
                    <option value="Autobus">AutoBus</option>
                    <option value="Camion">Camion</option>
                </select>
            </div>
            <form class="col-12 row mt-2">
                <div class="col-6">
                    <div class="form-floating">
                        <input type="text" class="form-control" id="matricula" @bind="matricula">
                        <label for="matricula">Matricula</label>
                    </div>
                </div>
                <div class="col-6 d-flex justify-content-center align-items-center">
                    <button type="button" class="btn btn-success" @onclick="agregar_vehiculo">Ingresar Vehiculo</button>
                </div>
            </form>
        </div>
        <div class="row">
            <div class="12">
                <div class="alert alert-primary text-center" role="alert">
                    <h6>Controles de Navegacion</h6>
                    @(inter)
                </div>
            </div>
            <div class="12">
                <div class="row">
                    <div class="col d-flex justify-content-center">
                        <button type="button" class="btn btn-secondary" @onclick="mover_norte" disabled="@disable_norte"><i class="fs-4 bi bi-arrow-up-square"></i></button>
                    </div>
                </div>
                <div class="row mt-2 mb-2">
                    <div class="col-6 d-flex justify-content-end">
                        <button type="button" class="btn btn-secondary" @onclick="mover_oeste" disabled="@disable_oeste"><i class="fs-4 bi bi-arrow-left-square"></i></button>
                    </div>
                    <div class="col-6 d-flex justify-content-start">
                        <button type="button" class="btn btn-secondary" @onclick="mover_este" disabled="@disable_este"><i class="fs-4 bi bi-arrow-right-square"></i></button>
                    </div>
                </div>
                <div class="row">
                    <div class="col d-flex justify-content-center">
                        <button type="button" class="btn btn-secondary" @onclick="mover_sur" disabled="@disable_sur"><i class="fs-4 bi bi-arrow-down-square"></i></button>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="12">
                <div class="alert alert-danger text-center" role="alert">
                    <h6>Control Vehicular</h6>
                </div>
            </div>
            <div class="col-12 mt-2">
                <ul class="list-group">
                    @for (int i = 0; i < vehiculos.Length-1; i++)
                    {
                        <li class="list-group-item"><i class="fs-4 bi bi-car-front-fill"></i>&nbsp;&nbsp;@(vehiculos[i])</li>
                    }
                </ul>
            </div>
            <div class="col-12 mt-2">
                <div class="row">
                    <div class="col d-flex justify-content-center">
                        <button type="button" class="btn btn-danger btn_mv" @onclick="mover_norte_vehiculo" disabled="@disable_norte_vm"><i class="fs-4 bi bi-arrow-up-square"></i></button>
                    </div>
                </div>
                <div class="row mt-2 mb-2">
                    <div class="col-6 d-flex justify-content-end">
                        <button type="button" class="btn btn-danger btn_mv" @onclick="mover_oeste_vehiculo" disabled="@disable_oeste_vm"><i class="fs-4 bi bi-arrow-left-square"></i></button>
                    </div>
                    <div class="col-6 d-flex justify-content-start">
                        <button type="button" class="btn btn-danger btn_mv" @onclick="mover_este_vehiculo" disabled="@disable_este_vm"><i class="fs-4 bi bi-arrow-right-square"></i></button>
                    </div>
                </div>
                <div class="row">
                    <div class="col d-flex justify-content-center">
                        <button type="button" class="btn btn-danger btn_mv" @onclick="mover_sur_vehiculo" disabled="@disable_sur_vm"><i class="fs-4 bi bi-arrow-down-square"></i></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-3 d-flex justify-content-center align-items-center">
        @if (semaforo)
        {
            <div class="row">
                <div class="col-12 justify-content-center d-flex">
                    <img id="semaforo" src="ImagnesSemaforo/Semaforo_verde.png" style="height: 200px">
                </div>
                <div id="temporizador" class="col-12 justify-content-center d-flex mt-2" style="font-size: 20px; font-weight: bold; margin-top: 10px;"></div>
            </div>
        }
    </div>
    <div class="col-5">
        <div class="card">
            <div class="card-header">
                Mapa
            </div>
            <div class="card-body  d-flex justify-content-center">
                <img src="@imagen" class="card-img-top" style="height: 600px; width: auto">
            </div>
        </div>
    </div>
</div>

@code{
    private DotNetObjectReference<Home>? objRef;
    string inter = "";
    bool semaforo = false;
    string imagen = "";
    string tipo_vehiculo;
    string matricula = "";
    string[] vehiculos = new string[0];
    Colonia colonia = new Colonia();
    Nodo_Multiple? interseccion_actual;

    bool disable_norte = false;
    bool disable_sur = false;
    bool disable_este = false;
    bool disable_oeste = false;


    bool disable_norte_vm = false;
    bool disable_sur_vm = false;
    bool disable_este_vm = false;
    bool disable_oeste_vm = false;

    void setRuta(){
        string? avenida = interseccion_actual.set_Interseccion().avenida;
        string? calle = interseccion_actual.set_Interseccion().calle;
        inter = $"{avenida} - {calle}";
        imagen = "images/" + interseccion_actual.set_Interseccion().imagen;
        semaforo = interseccion_actual.set_Interseccion().semaforo;
        //ACTIVAMOS LOS BOTONES DE NAVEGACION
        disable_norte = interseccion_actual.nodo_norte == null;
        disable_sur = interseccion_actual.nodo_sur == null;
        disable_este = interseccion_actual.nodo_este == null;
        disable_oeste = interseccion_actual.nodo_oeste == null;

        //ACTIVAMOS LOS BOTONOS DE CONTROL DE TRAFICO
        disable_norte_vm = interseccion_actual.nodo_norte == null;
        disable_sur_vm = interseccion_actual.nodo_sur == null;
        disable_este_vm = interseccion_actual.nodo_este == null;
        disable_oeste_vm = interseccion_actual.nodo_oeste == null;
        detenerSemaforo();
        if (semaforo)
        {
            iniciarSemaforo();
        }
    }

    void mover_norte(){
        interseccion_actual = interseccion_actual.nodo_norte;
        vehiculos = interseccion_actual.set_Interseccion().cola_vehicular.RecorrerLista(
            interseccion_actual.set_Interseccion().cola_vehicular.PrimerNodo
        ).Split('|');
        setRuta();
    }

    void mover_sur(){
        interseccion_actual = interseccion_actual.nodo_sur; ;
        vehiculos = interseccion_actual.set_Interseccion().cola_vehicular.RecorrerLista(
            interseccion_actual.set_Interseccion().cola_vehicular.PrimerNodo
        ).Split('|');
        setRuta();
        
    }

    void mover_este(){
        interseccion_actual = interseccion_actual.nodo_este;
        vehiculos = interseccion_actual.set_Interseccion().cola_vehicular.RecorrerLista(
            interseccion_actual.set_Interseccion().cola_vehicular.PrimerNodo
        ).Split('|');
        setRuta();
    }

    void mover_oeste(){
        interseccion_actual = interseccion_actual.nodo_oeste;
        vehiculos = interseccion_actual.set_Interseccion().cola_vehicular.RecorrerLista(
            interseccion_actual.set_Interseccion().cola_vehicular.PrimerNodo
        ).Split('|');
        setRuta();
    }

    void mover_norte_vehiculo()
    {
        Vehiculo vehiculo_actual = interseccion_actual.set_Interseccion().cola_vehicular.mover_vehiculo();
        interseccion_actual.nodo_norte.set_Interseccion().cola_vehicular.agregar_vehiculo(vehiculo_actual);
        vehiculos = interseccion_actual.set_Interseccion().cola_vehicular.RecorrerLista(
            interseccion_actual.set_Interseccion().cola_vehicular.PrimerNodo
        ).Split('|');
    }

    void mover_sur_vehiculo()
    {
        Vehiculo vehiculo_actual = interseccion_actual.set_Interseccion().cola_vehicular.mover_vehiculo();
        interseccion_actual.nodo_sur.set_Interseccion().cola_vehicular.agregar_vehiculo(vehiculo_actual);
        vehiculos = interseccion_actual.nodo_sur.set_Interseccion().cola_vehicular.RecorrerLista(
            interseccion_actual.set_Interseccion().cola_vehicular.PrimerNodo
        ).Split('|');
    }

    void mover_este_vehiculo()
    {
        Vehiculo? vehiculo_actual = interseccion_actual.set_Interseccion().cola_vehicular.mover_vehiculo();
        interseccion_actual.nodo_este.set_Interseccion().cola_vehicular.agregar_vehiculo(vehiculo_actual);
        vehiculos = interseccion_actual.set_Interseccion().cola_vehicular.RecorrerLista(
            interseccion_actual.set_Interseccion().cola_vehicular.PrimerNodo
        ).Split('|');
    }

    void mover_oeste_vehiculo()
    {
        Vehiculo? vehiculo_actual = interseccion_actual.set_Interseccion().cola_vehicular.mover_vehiculo();
        interseccion_actual.nodo_oeste.set_Interseccion().cola_vehicular.agregar_vehiculo(vehiculo_actual);
        vehiculos = interseccion_actual.set_Interseccion().cola_vehicular.RecorrerLista(
            interseccion_actual.set_Interseccion().cola_vehicular.PrimerNodo
        ).Split('|');
    }

    void agregar_vehiculo(){
        Vehiculo? new_vehiculo = new Vehiculo(matricula, tipo_vehiculo);
        interseccion_actual.set_Interseccion().cola_vehicular.agregar_vehiculo(new_vehiculo);
        vehiculos = interseccion_actual.set_Interseccion().cola_vehicular.RecorrerLista(
            interseccion_actual.set_Interseccion().cola_vehicular.PrimerNodo
        ).Split('|');
        matricula = "";
    }

    protected override void OnInitialized()
    {
        Nodo_Multiple? interseccion = colonia.Interserccion_Inicial;
        interseccion_actual = interseccion;
        setRuta();
    }


    [Inject]
    private IJSRuntime JS { get; set; } = default!;

    private async Task iniciarSemaforo()
    {
        objRef ??= DotNetObjectReference.Create(this);
        await JS.InvokeVoidAsync("iniciarSemaforo", objRef);
    }

    private async Task detenerSemaforo()
    {
        await JS.InvokeVoidAsync("detenerSemaforo");
    }

    [JSInvokable("ActualizarBotones")]
    public Task ActualizarBotones(bool habilitar)
    {
        disable_norte_vm = !habilitar || interseccion_actual?.nodo_norte == null;
        disable_sur_vm = !habilitar || interseccion_actual?.nodo_sur == null;
        disable_este_vm = !habilitar || interseccion_actual?.nodo_este == null;
        disable_oeste_vm = !habilitar || interseccion_actual?.nodo_oeste == null;

        StateHasChanged(); // Forzar renderizado
        return Task.CompletedTask;
    }

    public void Dispose()
    {
        objRef?.Dispose();
    }
}


